#!/bin/bash

# Laravel Sail + Production Docker Management Script
# –ü—Ä–æ—Å—Ç–æ–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è–º–∏

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log() {
    echo -e "${GREEN}[$(date +'%H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
    exit 1
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ .env —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
check_env() {
    if [ ! -f .env ]; then
        error ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.example –≤ .env"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
check_docker() {
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    fi

    if ! docker info &> /dev/null; then
        error "Docker daemon –Ω–µ –∑–∞–ø—É—â–µ–Ω!"
    fi
}

# ===== –õ–û–ö–ê–õ–¨–ù–ê–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ê (Sail) =====

sail_up() {
    check_env
    check_docker

    log "–ó–∞–ø—É—Å–∫ Laravel Sail (—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞)..."

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è Sail
    export WWWUSER=$(id -u)
    export WWWGROUP=$(id -g)

    ./vendor/bin/sail up -d

    info "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ:"
    info "üåê Web: http://localhost"
    info "üóÑÔ∏è MySQL: localhost:3306"
    info "üìö Redis: localhost:6379"
}

sail_down() {
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Laravel Sail..."
    ./vendor/bin/sail down
}

sail_restart() {
    log "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Laravel Sail..."
    sail_down
    sail_up
}

sail_build() {
    log "–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ Laravel Sail..."
    ./vendor/bin/sail build --no-cache
}

# ===== –ü–†–û–î–ê–ö–®–ù =====

prod_build() {
    check_env
    check_docker

    log "–°–±–æ—Ä–∫–∞ –ø—Ä–æ–¥–∞–∫—à–Ω –æ–±—Ä–∞–∑–∞..."
    docker compose -f docker-compose.production.yml build --no-cache
}

prod_up() {
    check_env
    check_docker

    log "–ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–Ω –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
            docker compose -f docker-compose.production.yml up -d

    info "‚úÖ –ü—Ä–æ–¥–∞–∫—à–Ω –∑–∞–ø—É—â–µ–Ω:"
    info "üåê Web: http://localhost:8080"
    info "üóÑÔ∏è MySQL: localhost:3306"
    info "üìö Redis: localhost:6379"
}

prod_down() {
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–¥–∞–∫—à–Ω –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
            docker compose -f docker-compose.production.yml down
}

prod_logs() {
    local service=${1:-app}
            docker compose -f docker-compose.production.yml logs -f "$service"
}

# ===== –û–ë–©–ò–ï –ö–û–ú–ê–ù–î–´ =====

reset_db() {
    log "–°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    ./vendor/bin/sail artisan migrate:fresh --seed --force
}

run_tests() {
    log "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
    ./vendor/bin/sail artisan test
}

generate_docs() {
    log "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
    ./vendor/bin/sail artisan scribe:generate
}

clear_cache() {
    log "–û—á–∏—Å—Ç–∫–∞ –∫—ç—à–µ–π..."
    ./vendor/bin/sail artisan cache:clear
    ./vendor/bin/sail artisan config:clear
    ./vendor/bin/sail artisan route:clear
    ./vendor/bin/sail artisan view:clear
}

format_code() {
    log "–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
    ./vendor/bin/sail composer pint
}

generate_ide_helpers() {
    log "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è IDE helper —Ñ–∞–π–ª–æ–≤..."
    ./vendor/bin/sail artisan ide-helper:generate
    ./vendor/bin/sail artisan ide-helper:models --write
    ./vendor/bin/sail artisan ide-helper:meta
}

# –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
status() {
    echo -e "${YELLOW}=== SAIL (–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞) ===${NC}"
    ./vendor/bin/sail ps 2>/dev/null || echo "–ù–µ –∑–∞–ø—É—â–µ–Ω"

    echo -e "\n${YELLOW}=== PRODUCTION ===${NC}"
    docker compose -f docker-compose.production.yml ps 2>/dev/null || echo "–ù–µ –∑–∞–ø—É—â–µ–Ω"
}

# –õ–æ–≥–∏
logs() {
    local service=${1:-laravel.test}
    ./vendor/bin/sail logs -f "$service"
}

# –ö–æ–Ω—Å–æ–ª—å
shell() {
    local service=${1:-laravel.test}
    ./vendor/bin/sail exec "$service" bash
}

# Artisan
artisan() {
    ./vendor/bin/sail artisan "$@"
}

# Composer
composer() {
    ./vendor/bin/sail composer "$@"
}

# NPM
npm() {
    ./vendor/bin/sail npm "$@"
}

# –û—á–∏—Å—Ç–∫–∞ Docker
docker_clean() {
    warning "–≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ Docker —Ä–µ—Å—É—Ä—Å—ã!"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        log "–û—á–∏—Å—Ç–∫–∞ Docker..."
        docker system prune -af --volumes
    fi
}

# ===== DEV-–û–ö–†–£–ñ–ï–ù–ò–ï =====

dev_up() {
    check_env
    check_docker
    log "–ó–∞–ø—É—Å–∫ DEV –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    docker compose -f docker-compose.dev.yml up -d
    info "‚úÖ DEV –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ:"
    info "üåê Web: http://localhost:8000"
    info "üóÑÔ∏è MySQL: localhost:3307"
    info "üìö Redis: localhost:6380"
}

dev_down() {
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ DEV –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    docker compose -f docker-compose.dev.yml down
}

dev_restart() {
    log "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ DEV –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    dev_down
    dev_up
}

dev_build() {
    log "–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ DEV –æ–±—Ä–∞–∑–æ–≤..."
    docker compose -f docker-compose.dev.yml build --no-cache
}

dev_logs() {
    local service=${1:-app}
    docker compose -f docker-compose.dev.yml logs -f "$service"
}

dev_shell() {
    docker compose -f docker-compose.dev.yml exec app bash
}

dev_artisan() {
    docker compose -f docker-compose.dev.yml exec app php artisan "$@"
}

dev_composer() {
    docker compose -f docker-compose.dev.yml exec app composer "$@"
}

dev_npm() {
    docker compose -f docker-compose.dev.yml exec app npm "$@"
}

gen_docs_dev() {
    log "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ (DEV)..."
    docker compose -f docker-compose.dev.yml exec app php artisan scribe:generate
}

migrate_fresh_dev() {
    log "–ú–∏–≥—Ä–∞—Ü–∏–∏ + —Å–∏–¥—ã (DEV, fresh, force)..."
    docker compose -f docker-compose.dev.yml exec app php artisan migrate:fresh --seed --force
}

test_dev() {
    log "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ (DEV)..."
    docker compose -f docker-compose.dev.yml exec app php artisan test
}

# –ü–æ–º–æ—â—å
help() {
    echo -e "${GREEN}üê≥ Laravel Vedma Shop - Docker Management${NC}"
    echo ""
    echo -e "${YELLOW}–õ–û–ö–ê–õ–¨–ù–ê–Ø –†–ê–ó–†–ê–ë–û–¢–ö–ê (Laravel Sail):${NC}"
    echo "  up              –ó–∞–ø—É—Å–∫ Sail (—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞)"
    echo "  down            –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Sail"
    echo "  restart         –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Sail"
    echo "  build           –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ Sail –æ–±—Ä–∞–∑–æ–≤"
    echo "  gen-docs-local  –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ (–ª–æ–∫–∞–ª—å–Ω–æ)"
    echo "  migrate-fresh-local  –ú–∏–≥—Ä–∞—Ü–∏–∏ + —Å–∏–¥—ã (fresh, force, –ª–æ–∫–∞–ª—å–Ω–æ)"
    echo ""
    echo -e "${YELLOW}–ü–†–û–î–ê–ö–®–ù:${NC}"
    echo "  prod-build      –°–±–æ—Ä–∫–∞ –ø—Ä–æ–¥–∞–∫—à–Ω –æ–±—Ä–∞–∑–∞"
    echo "  prod-up         –ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–Ω"
    echo "  prod-down       –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–¥–∞–∫—à–Ω"
    echo "  prod-logs [srv] –õ–æ–≥–∏ –ø—Ä–æ–¥–∞–∫—à–Ω (app, mysql, redis)"
    echo ""
    echo -e "${YELLOW}–†–ê–ó–†–ê–ë–û–¢–ö–ê:${NC}"
    echo "  reset-db        –°–±—Ä–æ—Å –ë–î + —Å–∏–¥—ã"
    echo "  test            –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
    echo "  docs            –ì–µ–Ω–µ—Ä–∞—Ü–∏—è API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"
    echo "  cache           –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–µ–π"
    echo "  lint            –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞"
    echo "  ide-helper      –ì–µ–Ω–µ—Ä–∞—Ü–∏—è IDE helper"
    echo ""
    echo -e "${YELLOW}–£–¢–ò–õ–ò–¢–´:${NC}"
    echo "  status          –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo "  logs [service]  –õ–æ–≥–∏ Sail —Å–µ—Ä–≤–∏—Å–∞"
    echo "  shell [service] –ö–æ–Ω—Å–æ–ª—å –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    echo "  artisan [cmd]   –í—ã–ø–æ–ª–Ω–∏—Ç—å artisan –∫–æ–º–∞–Ω–¥—É"
    echo "  composer [cmd]  –í—ã–ø–æ–ª–Ω–∏—Ç—å composer –∫–æ–º–∞–Ω–¥—É"
    echo "  npm [cmd]       –í—ã–ø–æ–ª–Ω–∏—Ç—å npm –∫–æ–º–∞–Ω–¥—É"
    echo "  docker-clean    –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤"
    echo ""
    echo -e "${YELLOW}DEV-–û–ö–†–£–ñ–ï–ù–ò–ï:${NC}"
    echo "  dev-up           –ó–∞–ø—É—Å–∫ DEV –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    echo "  dev-down         –û—Å—Ç–∞–Ω–æ–≤–∫–∞ DEV –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    echo "  dev-restart      –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ DEV –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    echo "  dev-build        –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ DEV –æ–±—Ä–∞–∑–æ–≤"
    echo "  dev-logs [srv]   –õ–æ–≥–∏ DEV (app, mysql_dev, redis_dev)"
    echo "  dev-shell        –ö–æ–Ω—Å–æ–ª—å –≤ DEV app"
    echo "  dev-artisan [c]  Artisan –≤ DEV"
    echo "  dev-composer [c] Composer –≤ DEV"
    echo "  docs-dev     –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ (DEV)"
    echo "  freshdb-dev  –ú–∏–≥—Ä–∞—Ü–∏–∏ + —Å–∏–¥—ã (fresh, force, DEV)"
    echo "  test-dev         –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ (DEV)"
    echo ""
    echo -e "${YELLOW}–ü–†–ò–ú–ï–†–´:${NC}"
    echo "  ./dev.sh up                    # –ó–∞–ø—É—Å–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
    echo "  ./dev.sh artisan migrate       # –ú–∏–≥—Ä–∞—Ü–∏–∏"
    echo "  ./dev.sh shell                 # –ö–æ–Ω—Å–æ–ª—å PHP –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
    echo "  ./dev.sh prod-up              # –ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–Ω"
    echo "  ./dev.sh prod-logs nginx      # –õ–æ–≥–∏ nginx –≤ –ø—Ä–æ–¥–∞–∫—à–Ω"
    echo ""
    echo -e "${BLUE}–î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞.${NC}"
    echo -e "${BLUE}–î–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º 'prod-'.${NC}"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-help}" in
    # Sail (—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞)
    up)
        sail_up
        ;;
    down)
        sail_down
        ;;
    restart)
        sail_restart
        ;;
    build)
        sail_build
        ;;

    # –ü—Ä–æ–¥–∞–∫—à–Ω
    prod-build)
        prod_build
        ;;
    prod-up)
        prod_up
        ;;
    prod-down)
        prod_down
        ;;
    prod-logs)
        prod_logs "${2:-app}"
        ;;

    # –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞
    reset-db)
        reset_db
        ;;
    test)
        run_tests
        ;;
    docs)
        generate_docs
        ;;
    cache)
        clear_cache
        ;;
    lint)
        format_code
        ;;
    ide-helper)
        generate_ide_helpers
        ;;

    # –£—Ç–∏–ª–∏—Ç—ã
    status)
        status
        ;;
    logs)
        logs "${2:-laravel.test}"
        ;;
    shell)
        shell "${2:-laravel.test}"
        ;;
    artisan)
        shift
        artisan "$@"
        ;;
    composer)
        shift
        composer "$@"
        ;;
    npm)
        shift
        npm "$@"
        ;;
    docker-clean)
        docker_clean
        ;;

    # DEV-–û–∫—Ä—É–∂–µ–Ω–∏–µ
    dev-up)
        dev_up
        ;;
    dev-down)
        dev_down
        ;;
    dev-restart)
        dev_restart
        ;;
    dev-build)
        dev_build
        ;;
    dev-logs)
        dev_logs "${2:-app}"
        ;;
    dev-shell)
        dev_shell
        ;;
    dev-artisan)
        shift
        dev_artisan "$@"
        ;;
    dev-composer)
        shift
        dev_composer "$@"
        ;;
    docs-dev)
        gen_docs_dev
        ;;
    freshdb-dev)
        migrate_fresh_dev
        ;;
    test-dev)
        test_dev
        ;;
    help|*)
        help
        ;;
esac


