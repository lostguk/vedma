#!/bin/bash

# –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Docker –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º –¥–ª—è Laravel
# –í–µ—Ä—Å–∏—è: 2.0 (Security Enhanced)

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
print_colored() {
    local color=$1
    local message=$2
    echo -e "${color}${message}${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Docker
check_docker() {
    if ! command -v docker &> /dev/null; then
        print_colored $RED "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker."
        exit 1
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        print_colored $RED "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose."
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ .env —Ñ–∞–π–ª–∞
check_env() {
    if [ ! -f .env ]; then
        print_colored $YELLOW "‚ö†Ô∏è  .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ö–æ–ø–∏—Ä—É—é –∏–∑ .env.example..."
        if [ -f .env.example ]; then
            cp .env.example .env
            print_colored $GREEN "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è."
        else
            print_colored $RED "‚ùå .env.example —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω."
            exit 1
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ .env —Ñ–∞–π–ª
    ENV_PERMS=$(stat -c "%a" .env)
    if [[ "$ENV_PERMS" != "600" && "$ENV_PERMS" != "644" ]]; then
        print_colored $YELLOW "‚ö†Ô∏è  –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø—Ä–∞–≤–∞ –Ω–∞ .env —Ñ–∞–π–ª..."
        chmod 600 .env
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤
create_secrets() {
    if [ ! -d "secrets" ]; then
        mkdir -p secrets
        print_colored $YELLOW "üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è secrets"
    fi
    
    if [ ! -f "secrets/mysql_root_password.txt" ]; then
        print_colored $YELLOW "üîê –°–æ–∑–¥–∞—é —Ñ–∞–π–ª —Å –ø–∞—Ä–æ–ª–µ–º MySQL root. –ò–ó–ú–ï–ù–ò–¢–ï –ï–ì–û –ù–ê –ü–†–û–î–ê–ö–®–ï–ù–ï!"
        echo "CHANGE_THIS_SECURE_PASSWORD_123!" > secrets/mysql_root_password.txt
        chmod 600 secrets/mysql_root_password.txt
    fi
    
    if [ ! -f "secrets/mysql_password.txt" ]; then
        print_colored $YELLOW "üîê –°–æ–∑–¥–∞—é —Ñ–∞–π–ª —Å –ø–∞—Ä–æ–ª–µ–º MySQL user. –ò–ó–ú–ï–ù–ò–¢–ï –ï–ì–û –ù–ê –ü–†–û–î–ê–ö–®–ï–ù–ï!"
        echo "CHANGE_THIS_USER_PASSWORD_456!" > secrets/mysql_password.txt
        chmod 600 secrets/mysql_password.txt
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è dev
setup_dev_env() {
    export HOST_UID=$(id -u)
    export HOST_GID=$(id -g)
    print_colored $BLUE "üîß HOST_UID=$HOST_UID, HOST_GID=$HOST_GID"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ dev –æ–∫—Ä—É–∂–µ–Ω–∏—è
dev_up() {
    print_colored $BLUE "üöÄ –ó–∞–ø—É—Å–∫ development –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    setup_dev_env
    check_env
    
    # –í–∫–ª—é—á–∞–µ–º dev –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é PHP
    if [ -f "docker/php/php-dev.ini.disabled" ]; then
        cp docker/php/php-dev.ini.disabled docker/php/php-dev.ini
    fi
    
    docker-compose -f docker-compose.dev.yml up -d --build
    print_colored $GREEN "‚úÖ Development –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
    print_colored $BLUE "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000"
    print_colored $BLUE "üóÑÔ∏è  Adminer –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8081"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ production –æ–∫—Ä—É–∂–µ–Ω–∏—è
prod_up() {
    print_colored $BLUE "üöÄ –ó–∞–ø—É—Å–∫ production –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    check_env
    create_secrets
    
    # –û—Ç–∫–ª—é—á–∞–µ–º dev –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é PHP
    if [ -f "docker/php/php-dev.ini" ]; then
        mv docker/php/php-dev.ini docker/php/php-dev.ini.disabled
    fi
    
    docker-compose -f docker-compose.yml up -d --build
    print_colored $GREEN "‚úÖ Production –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
down() {
    print_colored $YELLOW "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose -f docker-compose.dev.yml down 2>/dev/null || true
    docker-compose -f docker-compose.yml down 2>/dev/null || true
    print_colored $GREEN "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
reset_db() {
    print_colored $YELLOW "üóÑÔ∏è  –°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    docker-compose -f docker-compose.dev.yml exec php php artisan migrate:fresh --seed --force
    print_colored $GREEN "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–±—Ä–æ—à–µ–Ω–∞ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é
test() {
    print_colored $BLUE "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
    docker-compose -f docker-compose.dev.yml exec php php artisan test --parallel
    print_colored $GREEN "‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
docs() {
    print_colored $BLUE "üìö –ì–µ–Ω–µ—Ä–∞—Ü–∏—è API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
    docker-compose -f docker-compose.dev.yml exec php php artisan scribe:generate
    print_colored $GREEN "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞ Filament
filament_cache() {
    print_colored $BLUE "üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ Filament..."
    docker-compose -f docker-compose.dev.yml exec php php artisan filament:clear-cached-components
    docker-compose -f docker-compose.dev.yml exec php php artisan view:clear
    print_colored $GREEN "‚úÖ –ö—ç—à Filament –æ—á–∏—â–µ–Ω!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞
lint() {
    print_colored $BLUE "‚ú® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ —Å –ø–æ–º–æ—â—å—é Pint..."
    docker-compose -f docker-compose.dev.yml exec php ./vendor/bin/pint
    print_colored $GREEN "‚úÖ –ö–æ–¥ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ IDE helper
ide_helper() {
    print_colored $BLUE "üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è IDE helper —Ñ–∞–π–ª–æ–≤..."
    docker-compose -f docker-compose.dev.yml exec php php artisan ide-helper:generate
    docker-compose -f docker-compose.dev.yml exec php php artisan ide-helper:models --nowrite
    docker-compose -f docker-compose.dev.yml exec php php artisan ide-helper:meta
    print_colored $GREEN "‚úÖ IDE helper —Ñ–∞–π–ª—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
security_scan() {
    print_colored $BLUE "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Composer –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    docker-compose -f docker-compose.dev.yml exec php composer audit
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ —Ñ–∞–π–ª—ã
    print_colored $BLUE "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º..."
    find . -name "*.env*" -not -path "./node_modules/*" -exec ls -la {} \;
    find ./secrets -type f -exec ls -la {} \; 2>/dev/null || true
    
    print_colored $GREEN "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ª–æ–≥–æ–≤
logs() {
    local service=${2:-}
    if [ -n "$service" ]; then
        print_colored $BLUE "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ —Å–µ—Ä–≤–∏—Å–∞: $service"
        docker-compose -f docker-compose.dev.yml logs -f "$service"
    else
        print_colored $BLUE "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –ª–æ–≥–æ–≤"
        docker-compose -f docker-compose.dev.yml logs -f
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
backup_db() {
    print_colored $BLUE "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    local timestamp=$(date +%Y%m%d_%H%M%S)
    local backup_file="backup_${timestamp}.sql"
    
    docker-compose -f docker-compose.dev.yml exec mysql mysqldump -u root -p"$DB_PASSWORD" "$DB_DATABASE" > "$backup_file"
    print_colored $GREEN "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: $backup_file"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞
status() {
    print_colored $BLUE "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker-compose -f docker-compose.dev.yml ps
    
    print_colored $BLUE "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞:"
    docker system df
    
    print_colored $BLUE "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker-compose -f docker-compose.dev.yml ps --format "table {{.Name}}\t{{.Status}}\t{{.Ports}}" | grep -E "(shop_|Name)"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–º–æ—â–∏
help() {
    print_colored $BLUE "üöÄ Laravel Docker Management Script v2.0 (Security Enhanced)"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    print_colored $GREEN "  dev-up          - –ó–∞–ø—É—Å–∫ development –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    print_colored $GREEN "  prod-up         - –ó–∞–ø—É—Å–∫ production –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    print_colored $GREEN "  down            - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    print_colored $GREEN "  reset-db        - –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å —Å–∏–¥–∞–º–∏"
    print_colored $GREEN "  test            - –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
    print_colored $GREEN "  docs            - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"
    print_colored $GREEN "  filament-cache  - –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ Filament"
    print_colored $GREEN "  lint            - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ (Pint)"
    print_colored $GREEN "  ide-helper      - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è IDE helper —Ñ–∞–π–ª–æ–≤"
    print_colored $GREEN "  security-scan   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    print_colored $GREEN "  logs [service]  - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞)"
    print_colored $GREEN "  backup-db       - –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    print_colored $GREEN "  status          - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"
    print_colored $GREEN "  help            - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    print_colored $YELLOW "‚ö†Ô∏è  –ü–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ:"
    print_colored $YELLOW "   1. –ò–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª–∏ –≤ ./secrets/"
    print_colored $YELLOW "   2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ .env"
    print_colored $YELLOW "   3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
    print_colored $YELLOW "   4. –í—ã–ø–æ–ª–Ω–∏—Ç–µ security-scan"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    check_docker
    
    case "${1:-help}" in
        "dev-up")
            dev_up
            ;;
        "prod-up")
            prod_up
            ;;
        "down")
            down
            ;;
        "reset-db")
            reset_db
            ;;
        "test")
            test
            ;;
        "docs")
            docs
            ;;
        "filament-cache")
            filament_cache
            ;;
        "lint")
            lint
            ;;
        "ide-helper")
            ide_helper
            ;;
        "security-scan")
            security_scan
            ;;
        "logs")
            logs "$@"
            ;;
        "backup-db")
            backup_db
            ;;
        "status")
            status
            ;;
        "help"|*)
            help
            ;;
    esac
}

main "$@"
