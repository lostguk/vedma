services:
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    entrypoint: ["/entrypoint.sh"]
    command: ["nginx", "-g", "daemon off;"]
    container_name: shop_nginx_mac
    ports:
      - "8000:80"
    volumes:
      - ./public:/var/www/html/public:cached
      - ./storage/app/public:/var/www/html/storage/app/public:cached
      - ./docker/nginx/dev/conf.d:/etc/nginx/conf.d:ro
      - ./docker/nginx/localMac/entrypoint.sh:/entrypoint.sh:ro
    tmpfs:
      - /tmp
      - /var/cache/nginx
    environment:
      APP_ENV: local
    depends_on:
      php:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      - shop_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 128M
        reservations:
          cpus: "0.1"
          memory: 64M
    security_opt:
      - no-new-privileges:true
    # Mac не поддерживает read-only корневую FS с nginx
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE

  php:
    env_file:
      - .env
    build:
      context: ./docker/php
      dockerfile: Dockerfile
      args:
        # На Mac используем фиксированные UID/GID для совместимости
        UID: 1000
        GID: 1000
    container_name: shop_php_mac
    environment:
      COMPOSER_HOME: /var/www/html/.composer
      APP_ENV: local
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      # Основные файлы проекта с кэшированием для производительности
      - ./:/var/www/html:cached
      # Отдельные volumes для зависимостей (производительность на Mac)
      - vendor_volume:/var/www/html/vendor
      - node_modules_volume:/var/www/html/node_modules
      - composer_cache:/var/www/html/.composer/cache
      - npm_cache:/var/www/.npm
      # Конфигурационные файлы
      - ./.env:/var/www/html/.env:ro
    tmpfs:
      - /tmp/php:uid=1000,gid=1000
    ports:
      - "9001:9000"
    networks:
      - shop_network
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "php-fpm -t && curl -f http://localhost:9000/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1.5"
          memory: 1G
        reservations:
          cpus: "0.3"
          memory: 512M
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE

  mysql:
    image: mysql:8.0
    container_name: shop_mysql_mac
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_ROOT_HOST: "%"
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    tmpfs:
      - /tmp:uid=999,gid=999
    networks:
      - shop_network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${DB_PASSWORD}",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.2"
          memory: 512M
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE

  redis:
    image: redis:alpine
    container_name: shop_redis_mac
    ports:
      - "6378:6379"
    volumes:
      - redis_data:/data
    tmpfs:
      - /tmp
    networks:
      - shop_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          cpus: "0.1"
          memory: 128M
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID

  adminer:
    image: adminer:latest
    container_name: shop_adminer_mac
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
      ADMINER_DESIGN: "nette"
    networks:
      - shop_network
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 128M
        reservations:
          cpus: "0.05"
          memory: 64M
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID

networks:
  shop_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

volumes:
  mysql_data:
    driver: local
  composer_cache:
    driver: local
  npm_cache:
    driver: local
  redis_data:
    driver: local
  # Специальные volumes для Mac производительности
  vendor_volume:
    driver: local
  node_modules_volume:
    driver: local
