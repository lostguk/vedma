{
    "$schema": "https://getcomposer.org/schema.json",
    "name": "laravel/laravel",
    "type": "project",
    "description": "The skeleton application for the Laravel framework.",
    "keywords": [
        "laravel",
        "framework"
    ],
    "license": "MIT",
    "require": {
        "php": "^8.3",
        "darkaonline/l5-swagger": "^9.0",
        "filament/filament": "^3.3",
        "filament/spatie-laravel-media-library-plugin": "^3.3",
        "laravel/framework": "^11.0",
        "laravel/sanctum": "^4.0",
        "laravel/tinker": "^2.10.1",
        "livewire/livewire": "^3.6",
        "spatie/laravel-medialibrary": "^11.12",
        "spatie/laravel-sluggable": "^3.7"
    },
    "require-dev": {
        "barryvdh/laravel-ide-helper": "^3.5",
        "fakerphp/faker": "^1.23",
        "laravel/pail": "^1.2.2",
        "laravel/pint": "^1.13",
        "laravel/sail": "^1.41",
        "laravel/telescope": "^5.6",
        "mockery/mockery": "^1.6",
        "nunomaduro/collision": "^8.6",
        "pestphp/pest": "^3.7",
        "pestphp/pest-plugin-laravel": "^3.1"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi",
            "@php artisan filament:upgrade"
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi",
            "@php -r \"file_exists('database/database.sqlite') || touch('database/database.sqlite');\"",
            "@php artisan migrate --graceful --ansi"
        ],
        "dev": [
            "Composer\\Config::disableProcessTimeout",
            "npx concurrently -c \"#93c5fd,#c4b5fd,#fb7185,#fdba74\" \"php artisan serve\" \"php artisan queue:listen --tries=1\" \"php artisan pail --timeout=0\" \"npm run dev\" --names=server,queue,logs,vite"
        ],
        "fresh": [
            "php artisan migrate:fresh",
            "php artisan cache:clear",
            "php artisan config:clear",
            "php artisan view:clear",
            "php artisan route:clear"
        ],
        "fresh-seed": [
            "@fresh",
            "php artisan db:seed"
        ],
        "dev-setup": [
            "php artisan key:generate",
            "php artisan storage:link",
            "@fresh"
        ],
        "cache-all": [
            "php artisan config:cache",
            "php artisan route:cache",
            "php artisan view:cache"
        ],
        "clear-all": [
            "php artisan cache:clear",
            "php artisan config:clear",
            "php artisan view:clear",
            "php artisan route:clear"
        ],
        "docker-fresh": [
            "docker-compose exec php php artisan migrate:fresh",
            "docker-compose exec php php artisan cache:clear",
            "docker-compose exec php php artisan config:clear",
            "docker-compose exec php php artisan view:clear",
            "docker-compose exec php php artisan route:clear"
        ],
        "docker-fresh-seed": [
            "@docker-fresh",
            "docker-compose exec php php artisan db:seed"
        ],
        "docker-setup": [
            "docker-compose exec php php artisan key:generate",
            "docker-compose exec php php artisan storage:link",
            "@docker-fresh-seed"
        ],
        "pint": [
            "./vendor/bin/pint"
        ],
        "pint-test": [
            "./vendor/bin/pint --test"
        ],
        "docker-pint": [
            "docker-compose exec php ./vendor/bin/pint"
        ],
        "docker-pint-test": [
            "docker-compose exec php ./vendor/bin/pint --test"
        ],
        "swagger": [
            "php artisan l5-swagger:generate"
        ],
        "docker-swagger": [
            "docker-compose exec php php artisan l5-swagger:generate"
        ]
    },
    "scripts-descriptions": {
        "fresh": "Очистка базы данных и кэша",
        "fresh-seed": "Очистка базы данных, кэша и заполнение тестовыми данными",
        "dev-setup": "Первоначальная настройка проекта",
        "docker-fresh": "Docker: Очистка базы данных и кэша",
        "docker-fresh-seed": "Docker: Очистка БД, кэша и заполнение тестовыми данными",
        "docker-setup": "Docker: Первоначальная настройка проекта с заполнением тестовыми данными",
        "pint": "Форматирование кода",
        "pint-test": "Проверка форматирования кода без внесения изменений",
        "docker-pint": "Docker: Форматирование кода",
        "docker-pint-test": "Docker: Проверка форматирования кода без внесения изменений",
        "swagger": "Генерация Swagger документации",
        "docker-swagger": "Docker: Генерация Swagger документации"
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "php-http/discovery": true
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}
