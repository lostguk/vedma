version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/production/php/Dockerfile
      cache_from:
        - ${DOCKER_REGISTRY:-registry.gitlab.com}/${DOCKER_IMAGE:-vedma/app}:latest
    image: ${DOCKER_REGISTRY:-registry.gitlab.com}/${DOCKER_IMAGE:-vedma/app}:${VERSION:-latest}
    container_name: vedma_app
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    env_file:
      - .env
    ports:
      - "${APP_PORT:-80}:80"
    depends_on:
      - postgres
      - redis
    volumes:
      - storage:/var/www/html/storage
      - ./storage/app/public:/var/www/html/storage/app/public
      - ./storage/logs:/var/www/html/storage/logs
    networks:
      - vedma_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:16-alpine
    container_name: vedma_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - vedma_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: vedma_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - vedma_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backup:
    image: postgres:16-alpine
    container_name: vedma_backup
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - PGPASSWORD=${DB_PASSWORD}
    volumes:
      - ./backups:/backups
      - ./docker/scripts/backup.sh:/backup.sh:ro
    command: /bin/sh -c 'chmod +x /backup.sh && crond -f -l 2'
    networks:
      - vedma_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  storage:
    driver: local

networks:
  vedma_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16