# Docker Compose для продакшна
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: vedma-shop:production
    container_name: vedma_app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      APP_ENV: production
      DB_HOST: mysql
      REDIS_HOST: redis
    env_file:
      - .env
    volumes:
      - ./storage/app:/var/www/html/storage/app:rw
      - ./storage/logs:/var/www/html/storage/logs:rw
    networks:
      - vedma_network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    # security_opt:
    #   - no-new-privileges:true
    # cap_drop:
    #   - ALL
    # cap_add:
    #   - CHOWN
    #   - SETGID
    #   - SETUID
    # read_only: false  # Laravel требует запись в некоторые директории
    # tmpfs:
    #   - /tmp
    #   - /var/cache/nginx
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '2.0'
    #       memory: 1G
    #     reservations:
    #       cpus: '0.5'
    #       memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  mysql:
    image: mysql:8.0
    container_name: vedma_mysql
    restart: unless-stopped
    ports:
      - "${DB_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_HOST: "%"
    volumes:
      - mysql_data:/var/lib/mysql
      # - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    networks:
      - vedma_network
    # security_opt:
    #   - no-new-privileges:true
    # cap_drop:
    #   - ALL
    # cap_add:
    #   - CHOWN
    #   - SETGID
    #   - SETUID
    #   - DAC_OVERRIDE
    # read_only: false
    # tmpfs:
    #   - /tmp
    #   - /var/run/mysqld
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '1.5'
    #       memory: 2G
    #     reservations:
    #       cpus: '0.5'
    #       memory: 1G
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${DB_PASSWORD}",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    image: redis:7-alpine
    container_name: vedma_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/etc/redis/redis.conf:ro
    command: redis-server /etc/redis/redis.conf
    networks:
      - vedma_network
    # security_opt:
    #   - no-new-privileges:true
    # cap_drop:
    #   - ALL
    # cap_add:
    #   - SETGID
    #   - SETUID
    # read_only: true
    # tmpfs:
    #   - /tmp
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.5'
    #       memory: 512M
    #     reservations:
    #       cpus: '0.1'
    #       memory: 128M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  vedma_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
