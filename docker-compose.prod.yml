services:
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    image: ${DOCKER_HUB_USERNAME}/shop-nginx:latest
    container_name: shop_nginx
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      php:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      - shop_network
    restart: unless-stopped

  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    image: ${DOCKER_HUB_USERNAME}/shop-php:latest
    container_name: shop_php
    environment:
      COMPOSER_HOME: /var/www/html/.composer
    volumes:
      - ./:/var/www/html
    networks:
      - shop_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "php-fpm", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  mysql:
    image: mysql:8.0
    container_name: shop_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - shop_network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${DB_PASSWORD}",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:alpine
    container_name: shop_redis
    networks:
      - shop_network
    restart: unless-stopped

networks:
  shop_network:
    driver: bridge

volumes:
  mysql_data:
