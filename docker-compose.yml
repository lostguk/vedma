services:
    nginx:
        build:
            context: ./docker/nginx
            dockerfile: Dockerfile
        container_name: shop_nginx
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./:/var/www/html:ro
            - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
            - /etc/letsencrypt/:/etc/letsencrypt/:ro
            - nginx_logs:/var/log/nginx
        depends_on:
            php:
                condition: service_healthy
            mysql:
                condition: service_healthy
        networks:
            - frontend
            - backend
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s
        restart: unless-stopped
        security_opt:
            - no-new-privileges:true
        cap_drop:
            - ALL
        cap_add:
            - CHOWN
            - SETGID
            - SETUID
        read_only: true
        tmpfs:
            - /tmp:noexec,nosuid,size=100m
            - /var/run:noexec,nosuid,size=100m
            - /var/cache/nginx:noexec,nosuid,size=100m
        deploy:
            resources:
                limits:
                    cpus: '1.0'
                    memory: 512M
                reservations:
                    cpus: '0.25'
                    memory: 128M
        environment:
            - NGINX_ENVSUBST_TEMPLATE_SUFFIX=.template
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "3"

    php:
        build:
            context: ./docker/php
            dockerfile: Dockerfile
        container_name: shop_php
        volumes:
            - ./:/var/www/html
            - composer_cache:/var/www/html/.composer/cache
        networks:
            - backend
        healthcheck:
            test: ["CMD", "php-fpm", "-t"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s
        restart: unless-stopped
        security_opt:
            - no-new-privileges:true
        cap_drop:
            - ALL
        cap_add:
            - DAC_OVERRIDE
            - SETGID
            - SETUID
        user: "1000:1000"
        deploy:
            resources:
                limits:
                    cpus: '1.5'
                    memory: 1G
                reservations:
                    cpus: '0.5'
                    memory: 256M
        environment:
            - COMPOSER_HOME=/var/www/html/.composer
            - PHP_MEMORY_LIMIT=512M
        tmpfs:
            - /tmp:noexec,nosuid,size=100m
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "3"

    mysql:
        image: mysql:8.0
        container_name: shop_mysql
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
            MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_INITDB_SKIP_TZINFO: 1
        ports:
            - "127.0.0.1:3306:3306"
        volumes:
            - mysql_data:/var/lib/mysql
            - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
            - mysql_logs:/var/log/mysql
        networks:
            - backend
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$${MYSQL_ROOT_PASSWORD}"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s
        security_opt:
            - no-new-privileges:true
        cap_drop:
            - ALL
        cap_add:
            - DAC_OVERRIDE
            - SETGID
            - SETUID
        user: "999:999"
        deploy:
            resources:
                limits:
                    cpus: '1.0'
                    memory: 1G
                reservations:
                    cpus: '0.25'
                    memory: 256M
        secrets:
            - mysql_root_password
            - mysql_password
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "3"

    redis:
        image: redis:7-alpine
        container_name: shop_redis
        command: >
            redis-server 
            --requirepass ${REDIS_PASSWORD}
            --appendonly yes
            --appendfsync everysec
            --maxmemory 256m
            --maxmemory-policy allkeys-lru
        ports:
            - "127.0.0.1:6379:6379"
        volumes:
            - redis_data:/data
        networks:
            - backend
        healthcheck:
            test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s
        restart: unless-stopped
        security_opt:
            - no-new-privileges:true
        cap_drop:
            - ALL
        user: "999:1000"
        deploy:
            resources:
                limits:
                    cpus: '0.5'
                    memory: 512M
                reservations:
                    cpus: '0.1'
                    memory: 64M
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "3"

networks:
    frontend:
        driver: bridge
        driver_opts:
            com.docker.network.bridge.name: shop_frontend
        ipam:
            config:
                - subnet: 172.20.0.0/24
    backend:
        driver: bridge
        driver_opts:
            com.docker.network.bridge.name: shop_backend
        internal: true
        ipam:
            config:
                - subnet: 172.21.0.0/24

volumes:
    mysql_data:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: ${DATA_PATH:-./data}/mysql
    redis_data:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: ${DATA_PATH:-./data}/redis
    composer_cache:
        driver: local
    nginx_logs:
        driver: local
    mysql_logs:
        driver: local

secrets:
    mysql_root_password:
        file: ./secrets/mysql_root_password.txt
    mysql_password:
        file: ./secrets/mysql_password.txt
