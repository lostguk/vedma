services:
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: shop_nginx_dev
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/dev/conf.d:/etc/nginx/conf.d
    depends_on:
      php:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      - shop_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 64M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
      args:
        UID: ${HOST_UID:-1000}
        GID: ${HOST_GID:-1000}
    container_name: shop_php_dev
    environment:
      COMPOSER_HOME: /var/www/html/.composer
      APP_ENV: local
      PHP_MEMORY_LIMIT: 1G
    volumes:
      - ./:/var/www/html
      - composer_cache:/var/www/html/.composer/cache
      - npm_cache:/var/www/.npm
    ports:
      - "9001:9000"
    networks:
      - shop_network
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "php-fpm", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    user: "${HOST_UID:-1000}:${HOST_GID:-1000}"
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.25'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mysql:
    image: mysql:8.0
    container_name: shop_mysql_dev
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_INITDB_SKIP_TZINFO: 1
    ports:
      - "127.0.0.1:3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    networks:
      - shop_network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${DB_PASSWORD}",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.1'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    container_name: shop_redis_dev
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD:-devpassword}
      --appendonly yes
      --maxmemory 128m
      --maxmemory-policy allkeys-lru
    ports:
      - "127.0.0.1:6378:6379"
    volumes:
      - redis_data:/data
    networks:
      - shop_network
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-devpassword}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.05'
          memory: 32M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  adminer:
    image: adminer:latest
    container_name: shop_adminer_dev
    ports:
      - "127.0.0.1:8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
      ADMINER_DESIGN: pepa-linha
    networks:
      - shop_network
    depends_on:
      mysql:
        condition: service_healthy
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M
        reservations:
          cpus: '0.05'
          memory: 32M
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

networks:
  shop_network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: shop_dev
    ipam:
      config:
        - subnet: 172.22.0.0/24

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  composer_cache:
    driver: local
  npm_cache:
    driver: local
